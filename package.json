{
  "name": "agda",
  "displayName": "Agda",
  "description": "Support for the Agda programming language, with support for Agda's language server.",
  "author": "Microsoft Corporation",
  "license": "MIT",
  "version": "1.0.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/vscode-extension-samples"
  },
  "publisher": "plt-amy",
  "categories": [],
  "keywords": [
    "multi-root ready"
  ],
  "engines": {
    "vscode": "^1.89.0"
  },
  "main": "./out/desktop/extension.js",
  "browser": "./out/web/extension.js",
  "extensionKind": [
    "workspace"
  ],
  "contributes": {
    "languages": [
      {
        "id": "agda",
        "aliases": [
          "Agda",
          "agda"
        ],
        "extensions": [
          ".agda",
          ".lagda.md"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "viewsContainers": {
      "panel": [
        {
          "id": "agda-infoview",
          "icon": "logo.svg",
          "title": "Agda"
        }
      ]
    },
    "views": {
      "agda-infoview": [
        {
          "type": "webview",
          "id": "agda.infoView",
          "name": "Status",
          "visibility": "visible"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Agda",
      "properties": {
        "agda.executable.path": {
          "scope": "window",
          "type": "string",
          "default": "agda",
          "description": "The name or path to the Agda executable."
        },
        "agda.executable.options": {
          "scope": "window",
          "type": "array",
          "default": [],
          "description": "Extra command-line options to pass to the Agda executable."
        },
        "agda.lsp.reloadOnSave": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Reload the file on every save."
        },
        "agda.lsp.highlightingLevel": {
          "scope": "resource",
          "type": "string",
          "enum": [
            "None",
            "NonInteractive",
            "Interactive"
          ],
          "default": "NonInteractive",
          "description": "Specifies the highlighting level that should be used over this connection. NonInteractive highlighting is the default (the source file is highlighted once at the end of scope checking, and once at the end of type checking). Interactive highlighting pushes highlighting changes to the client as they are produced by the type checker."
        },
        "agda.goal.typeNormalisation": {
          "scope": "resource",
          "type": "string",
          "enum": [
            "AsIs",
            "Instantiated",
            "HeadNormal",
            "Simplified",
            "Normalised"
          ],
          "default": "AsIs",
          "description": "Normalisation level to use, by default, for the goal type."
        }
      }
    },
    "colors": [
      {
        "id": "agda.comment",
        "description": "Colour to use for comments.",
        "defaults": {
          "light": "#008000",
          "dark": "#5C6370"
        }
      },
      {
        "id": "agda.keyword",
        "description": "Colour to use for keywords.",
        "defaults": {
          "light": "#0000FF",
          "dark": "#C678DD"
        }
      },
      {
        "id": "agda.string",
        "description": "Colour to use for strings.",
        "defaults": {
          "light": "#A31515",
          "dark": "#98C379"
        }
      },
      {
        "id": "agda.number",
        "description": "Colour to use for numbers.",
        "defaults": {
          "light": "#098658",
          "dark": "#D19A66"
        }
      },
      {
        "id": "agda.hole",
        "description": "Colour to use for interaction points.",
        "defaults": {
          "light": "#008000",
          "dark": "#5C6370"
        }
      },
      {
        "id": "agda.symbol",
        "description": "Colour to use for symbols (punctuation).",
        "defaults": {
          "light": "editor.foreground",
          "dark": "editor.foreground"
        }
      },
      {
        "id": "agda.primitiveType",
        "description": "Colour to use for primitive types.",
        "defaults": {
          "light": "#795E26",
          "dark": "#8080FF"
        }
      },
      {
        "id": "agda.bound",
        "description": "Colour to use for bound names.",
        "defaults": {
          "light": "editor.foreground",
          "dark": "editor.foreground"
        }
      },
      {
        "id": "agda.generalizable",
        "description": "Colour to use for generalizable names.",
        "defaults": {
          "light": "editor.foreground",
          "dark": "editor.foreground"
        }
      },
      {
        "id": "agda.constructorInductive",
        "description": "Colour to use for inductive constructors.",
        "defaults": {
          "light": "#795E26",
          "dark": "#29CC29"
        }
      },
      {
        "id": "agda.constructorCoinductive",
        "description": "Colour to use for coinductive constructors.",
        "defaults": {
          "light": "#795E26",
          "dark": "#29CC29"
        }
      },
      {
        "id": "agda.datatype",
        "description": "Colour to use for datatype names.",
        "defaults": {
          "light": "#795E26",
          "dark": "#8080FF"
        }
      },
      {
        "id": "agda.field",
        "description": "Colour to use for field names.",
        "defaults": {
          "light": "#795E26",
          "dark": "#8080FF"
        }
      },
      {
        "id": "agda.function",
        "description": "Colour to use for function names.",
        "defaults": {
          "light": "#795E26",
          "dark": "#8080FF"
        }
      },
      {
        "id": "agda.module",
        "description": "Colour to use for module names.",
        "defaults": {
          "light": "#795E26",
          "dark": "#8080FF"
        }
      },
      {
        "id": "agda.postulate",
        "description": "Colour to use for postulate names.",
        "defaults": {
          "light": "#795E26",
          "dark": "#8080FF"
        }
      },
      {
        "id": "agda.primitive",
        "description": "Colour to use for primitive names.",
        "defaults": {
          "light": "#795E26",
          "dark": "#8080FF"
        }
      },
      {
        "id": "agda.record",
        "description": "Colour to use for record names.",
        "defaults": {
          "light": "#795E26",
          "dark": "#8080FF"
        }
      },
      {
        "id": "agda.argument",
        "description": "Colour to use for argument names.",
        "defaults": {
          "light": "#795E26",
          "dark": "#8080FF"
        }
      },
      {
        "id": "agda.macro",
        "description": "Colour to use for macro names.",
        "defaults": {
          "light": "#795E26",
          "dark": "#8080FF"
        }
      },
      {
        "id": "agda.pragma",
        "description": "Colour to use for the text inside a pragma.",
        "defaults": {
          "light": "#008000",
          "dark": "#5C6370"
        }
      }
    ],
    "semanticTokenScopes": [
      {
        "language": "agda",
        "scopes": {
          "coinductiveCons": [
            "constant.other.symbol"
          ],
          "interactionPoint": [
            "constant.other.symbol"
          ],
          "postulate": [
            "entity.name.postulate"
          ],
          "pragma": [
            "entity.name.pragma"
          ],
          "primitiveType": [
            "support.type.primitive"
          ],
          "primitive": [
            "entity.name.primitive"
          ],
          "symbol": [
            "source.agda.symbol"
          ]
        }
      }
    ],
    "commands": [
      {
        "command": "agda.nextGoal",
        "title": "Next interaction point",
        "category": "Agda"
      },
      {
        "command": "agda.prevGoal",
        "title": "Previous interaction point",
        "category": "Agda"
      },
      {
        "command": "agda.restart",
        "title": "Restart",
        "category": "Agda"
      },
      {
        "command": "agda.reload",
        "title": "Reload",
        "category": "Agda"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "agda.nextGoal",
          "when": "editorLangId == agda || resourceFilename =~ /\\.lagda\\.md$/"
        },
        {
          "command": "agda.prevGoal",
          "when": "editorLangId == agda || resourceFilename =~ /\\.lagda\\.md$/"
        },
        {
          "command": "agda.restart",
          "when": "editorLangId == agda || resourceFilename =~ /\\.lagda\\.md$/"
        },
        {
          "command": "agda.reload",
          "when": "editorLangId == agda || resourceFilename =~ /\\.lagda\\.md$/"
        }
      ]
    },
    "grammars": [
      {
        "language": "agda",
        "scopeName": "source.agda",
        "path": "./syntaxes/agda.tmLanguage.json"
      },
      {
        "scopeName": "markdown.agda.codeblock",
        "path": "./syntaxes/agda-markdown-codeblock.tmLanguage.json",
        "injectTo": [
          "text.html.markdown"
        ],
        "embeddedLanguages": {
          "meta.embedded.block.agda": "agda"
        }
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+c ctrl+a",
        "command": "editor.action.codeAction",
        "when": "(editorLangId == agda || resourceFilename =~ /\\.lagda\\.md$/) && !editorHasSelection && editorTextFocus",
        "args": {
          "kind": "agda.auto"
        }
      },
      {
        "key": "ctrl+c ctrl+r",
        "command": "editor.action.codeAction",
        "when": "(editorLangId == agda || resourceFilename =~ /\\.lagda\\.md$/) && !editorHasSelection && editorTextFocus",
        "args": {
          "kind": "agda.refine"
        }
      },
      {
        "key": "ctrl+c ctrl+space",
        "command": "editor.action.codeAction",
        "when": "(editorLangId == agda || resourceFilename =~ /\\.lagda\\.md$/) && !editorHasSelection && editorTextFocus",
        "args": {
          "kind": "agda.give"
        }
      },
      {
        "key": "ctrl+c ctrl+c",
        "command": "editor.action.codeAction",
        "when": "(editorLangId == agda || resourceFilename =~ /\\.lagda\\.md$/) && !editorHasSelection && editorTextFocus",
        "args": {
          "kind": "agda.case"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc --build && node esbuild.mjs --production",
    "watch": "tsc --build && node esbuild.mjs --watch",
    "lint": "eslint ./src --ext .ts,.tsx",
    "open-in-browser": "vscode-test-web --extensionDevelopmentPath=. --coi ../cpi-agda"
  },
  "dependencies": {
    "@types/vscode-webview": "^1.57.5",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.23.0",
    "tslib": "^2.6.2",
    "vscode-languageclient": "^10.0.0-next.12"
  },
  "devDependencies": {
    "@types/node": "^20.12.7",
    "@types/react": "^18.3.1",
    "@types/react-dom": "^18.3.0",
    "@types/vscode": "^1.89.0",
    "@typescript-eslint/eslint-plugin": "^7.1.0",
    "@typescript-eslint/parser": "^7.1.0",
    "@vscode/test-electron": "^2.3.9",
    "@vscode/test-web": "^0.0.62",
    "@vscode/wasm-wasi": "^1.0.1",
    "esbuild": "^0.24.0",
    "eslint": "^8.57.0",
    "typescript": "^5.3.3"
  }
}
